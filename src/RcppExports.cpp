// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// getDSTP_new
NumericMatrix getDSTP_new(NumericVector parms, int trialType, int nTrials, double dt, double var);
RcppExport SEXP _flankr_getDSTP_new(SEXP parmsSEXP, SEXP trialTypeSEXP, SEXP nTrialsSEXP, SEXP dtSEXP, SEXP varSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type parms(parmsSEXP);
    Rcpp::traits::input_parameter< int >::type trialType(trialTypeSEXP);
    Rcpp::traits::input_parameter< int >::type nTrials(nTrialsSEXP);
    Rcpp::traits::input_parameter< double >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< double >::type var(varSEXP);
    rcpp_result_gen = Rcpp::wrap(getDSTP_new(parms, trialType, nTrials, dt, var));
    return rcpp_result_gen;
END_RCPP
}
// getSSP_new
NumericMatrix getSSP_new(NumericVector parms, int trialType, int nTrials, double dt, double var);
RcppExport SEXP _flankr_getSSP_new(SEXP parmsSEXP, SEXP trialTypeSEXP, SEXP nTrialsSEXP, SEXP dtSEXP, SEXP varSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type parms(parmsSEXP);
    Rcpp::traits::input_parameter< int >::type trialType(trialTypeSEXP);
    Rcpp::traits::input_parameter< int >::type nTrials(nTrialsSEXP);
    Rcpp::traits::input_parameter< double >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< double >::type var(varSEXP);
    rcpp_result_gen = Rcpp::wrap(getSSP_new(parms, trialType, nTrials, dt, var));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_flankr_getDSTP_new", (DL_FUNC) &_flankr_getDSTP_new, 5},
    {"_flankr_getSSP_new", (DL_FUNC) &_flankr_getSSP_new, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_flankr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
